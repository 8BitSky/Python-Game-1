#BG https://deep-fold.itch.io/space-background-generator
#Art and Music https://ansimuz.itch.io/spaceship-shooter-environment

import pygame, sys
from pygame.locals import QUIT

#Global Setup
pygame.init()
WINDOW_WIDTH, WINDOW_HEIGHT = 1280,720
display_surface = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption('Asteroid')
clock = pygame.time.Clock()

#Functions
def laser_update(laser_list, speed):
    for rect in laser_list:
        rect.y -= speed;
        if rect.bottom < 0:
            laser_list.remove(rect)
    
#Ship
#ship_surface = pygame.Surface((70,100))
ship_surface = pygame.image.load('../sprites/single_ship.png').convert_alpha()
ship_surface_scaled = pygame.transform.scale(ship_surface,(64,64))
ship_rect = ship_surface_scaled.get_rect(center = (WINDOW_WIDTH/2, WINDOW_HEIGHT/2))

#Laser
laser_surface = pygame.image.load('../sprites/single_laser.png').convert()
#laser_rect = laser_surface.get_rect(center = ship_rect.center)
laser_list = []

#Asteroid
asteroid_surface = pygame.image.load('../sprites/asteroid.png').convert()
asteroid_list = []

#BG
bg_surface = pygame.image.load('../sprites/bg.png').convert()

#Disable Mouse
pygame.mouse.set_visible(False)

#Game Loop
while True:
    #Close Game Event
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN:
            if event.button == 1:
                laser_rect = laser_surface.get_rect(midbottom = ship_rect.midtop)
                laser_list.append(laser_rect)
                
        if event.type == asteroid_timer:         
            #Logic For Asteroid, append to our list
            
            
            
    clock.tick(200)
    
    #Section 1 - Sprites & Surfaces
            #Background, Player, Incoming Objects, Projectile, Text
    display_surface.fill((0,0,0))
    display_surface.blit(bg_surface,(0,0))
    display_surface.blit(ship_surface_scaled,ship_rect)
    #display_surface.blit(laser_surface,laser_rect)
            
            
    #Section 2 - Inputs & Controls (Interaction)
            #Movement (Mouse), Buttons (Projectiles)
    ship_rect.center = pygame.mouse.get_pos()
    #laser_rect.y -= 1

    #Section 3 - Game Logic & Updates (Gameplay)
            #Mandatory: Movement Code Player, List for Asteroids, Iteration, Collisions
            #Extras: Score, Lives, Splits?, Audio?
    laser_update(laser_list, 10)
    for rect in laser_list:
        display_surface.blit(laser_surface,rect)

    #Final Visual Update To User
    pygame.display.update()
